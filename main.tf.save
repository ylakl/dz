terraform {
  required_providers {
    yandex = {
      source  = "yandex-cloud/yandex"
      version = "0.139.0"
    }
  }
}
provider "yandex" {
   token     = "t1.9euelZqPyZiRmpuclMzImsvKxoqUzO3rnpWazJeRms-Mx8nIiYmNycnHlY7l8_c7CR9B-e84XmJL_d3z93s3HEH57zheYkv9zef1656VmpLKy5mXxsyZis2cxpXKkpyJ7_zF656VmpLKy5mXxsyZis2cxpXKkpyJ.LC_uRUxwki7m_IYGAuYG4gHxu3Et83pI0RaQM40mtekF5M6_u54v0Ior56ZjKVwgY2-aTZnp61W9zsTfOWjKDg"
  cloud_id  = "b1guukrlolhh89d8t696"
  folder_id = "b1gctg2bhvuagrakii2l"
  zone      = "ru-central1-d"}

resource "yandex_compute_instance" "app_instance" {
  count = 1
  name  = "java-app-instance-${count.index}"
  platform_id = "standard-v1"
  zone = var.yc_zone

  resources {
    cores = 2
    memory = 2
  }

  boot_disk {
    disk_type = "network-hdd"
    auto_delete = true
    image_id = "fd82d5v5m74tsb5h8t55" # Используйте нужный вам образ (например, Ubuntu)
  }

  network_interface {
    subnet_id = var.yc_subnet_id
    nat        = true
  }

  metadata = {
    ssh-keys = "your-ssh-keys"
  }
}

output "instance_ip" {
  value = yandex_compute_instance.app_instance[0].network_interface[0].nat_ip_address
}
